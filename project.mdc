# Описание проекта

## Общая информация
Проект — **цифровая версия анкет для настольной игры "Cash Flow"**.  
Система состоит из двух частей:

- **Frontend**: приложение на Vue.js с двумя ролями:
  - **Игрок** — взаимодействует с игрой (управляет активами, выполняет действия).
  - **Администратор** — управляет финансами игроков, подтверждает или отклоняет их действия.
- **Backend**: приложение на Node.js с поддержкой **WebSocket** для обмена данными в реальном времени.
- **База данных**: сессионное хранилище (короткоживущие данные, очищаются после завершения игры).

---

## Функциональные требования

### Игрок
- Управлять личными активами, деньгами и обязательствами.
- Выполнять игровые действия:
  - Покупка / продажа активов.
  - Покупка / продажа недвижимости.
  - Взятие кредитов.
  - Погашение кредитов.
- Отправлять запросы на **подтверждение администратору**.

### Администратор
- Управлять деньгами, активами и обязательствами игроков.
- Получать **уведомления о действиях игроков**.
- Подтверждать или отклонять:
  - Покупку / продажу активов.
  - Покупку / продажу недвижимости.
  - Взятие кредитов.
  - Погашение кредитов.
- Иметь возможность вручную изменять состояние игрока.

---

## User Flow

1. **Вход на сайт**
   - Система генерирует уникальный **индивидуальный код игрока**.
   - Код используется для идентификации игрока в сессии.

2. **Выбор профессии**
   - Игрок видит список доступных профессий.
   - Каждая профессия содержит предопределённые **доходы** и **расходы**.

3. **Формирование карточки игрока**
   - После выбора профессии генерируется **карточка игрока**:
     - Доход (зарплата).
     - Расходы (налоги, аренда, кредиты и т.д.).
     - Активы и обязательства (если заданы профессией).
   - Карточка отображается в интерфейсе игрока.

4. **Сохранение данных**
   - В базе сохраняются:
     - Индивидуальный код.
     - Данные выбранной профессии.
     - Финансовое состояние игрока и его активы.

5. **Игровое взаимодействие**
   - Игрок выполняет действия (покупка/продажа активов, кредиты).
   - Все действия требуют **подтверждения администратора**.

6. **Действия администратора**
   - Администратор получает уведомления о запросах.
   - Подтверждает или отклоняет действия игрока.
   - Вносит изменения в баланс и активы при необходимости.

---

## Диаграмма User Flow

```mermaid
flowchart TD
    A[Игрок заходит на сайт] --> B[Генерация индивидуального кода]
    B --> C[Выбор профессии]
    C --> D[Загрузка данных профессии: доходы и расходы]
    D --> E[Создание карточки игрока]
    E --> F[Сохранение данных в базе]
    F --> G[Игровое взаимодействие: запрос действия]
    G --> H[Уведомление администратора]
    H --> I{Администратор подтверждает?}
    I -->|Да| J[Изменение состояния игрока]
    I -->|Нет| K[Отказ в действии]
    J --> G
    K --> G
